{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\SekerShekel\\\\client\\\\src\\\\App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './Components/auth/Login';\nimport PasswordPage from './Components/Pages/PassworPage';\nimport Navbar from './Components/layout/Navbar';\nimport Main from './Components/Pages/Main';\nimport UserDashbord from './Components/Pages/UserDashbord';\nimport { Provider } from 'react-redux';\nimport setAutToken from './Utils/setAutToken';\nimport store from './store';\nimport { connect } from 'react-redux';\nimport { loadUser } from './action/auth';\nimport Alert from './Components/layout/Alert';\nimport './App.css';\nimport auth from './reducers/auth';\n\nif (localStorage.token) {\n  setAutToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  const userOrNot = () => {\n    const tempState = store.getState();\n    const isLogin = tempState.auth.isFullAut;\n    console.log(store.getState(auth.isFullAut));\n    console.log(isLogin);\n\n    if (isLogin) {\n      return React.createElement(UserDashbord, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => userOrNot(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/Login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/PasswordPage/:token\",\n    component: PasswordPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/React/SekerShekel/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Login","PasswordPage","Navbar","Main","UserDashbord","Provider","setAutToken","store","connect","loadUser","Alert","auth","localStorage","token","App","dispatch","userOrNot","tempState","getState","isLogin","isFullAut","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBP,EAAAA,WAAW,CAACM,YAAY,CAACC,KAAd,CAAX;AACD;;AACD,MAAMC,GAAG,GAAG,MAAM;AAChBnB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACQ,QAAN,CAAeN,QAAQ,EAAvB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMO,SAAS,GAAG,MAAM;AACtB,UAAMC,SAAS,GAAGV,KAAK,CAACW,QAAN,EAAlB;AACA,UAAMC,OAAO,GAAGF,SAAS,CAACN,IAAV,CAAeS,SAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACW,QAAN,CAAeP,IAAI,CAACS,SAApB,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AAEA,QAAIA,OAAJ,EAAa;AACX,aAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAVD;;AAWA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAE,MAAMS,SAAS,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEhB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,sBAFP;AAGE,IAAA,SAAS,EAAEC,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CAFF,CADF,CADF,CADF;AAqBD,CArCD;;AAsCA,eAAea,GAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './Components/auth/Login';\nimport PasswordPage from './Components/Pages/PassworPage';\nimport Navbar from './Components/layout/Navbar';\nimport Main from './Components/Pages/Main';\nimport UserDashbord from './Components/Pages/UserDashbord';\nimport { Provider } from 'react-redux';\nimport setAutToken from './Utils/setAutToken';\nimport store from './store';\nimport { connect } from 'react-redux';\nimport { loadUser } from './action/auth';\nimport Alert from './Components/layout/Alert';\n\nimport './App.css';\nimport auth from './reducers/auth';\n\nif (localStorage.token) {\n  setAutToken(localStorage.token);\n}\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  const userOrNot = () => {\n    const tempState = store.getState();\n    const isLogin = tempState.auth.isFullAut;\n    console.log(store.getState(auth.isFullAut));\n    console.log(isLogin);\n\n    if (isLogin) {\n      return <UserDashbord />;\n    }\n    return <Main />;\n  };\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/' component={() => userOrNot()}></Route>\n              <Route exact path='/Login' component={Login}></Route>\n              <Route\n                exact\n                path='/PasswordPage/:token'\n                component={PasswordPage}\n              ></Route>\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}