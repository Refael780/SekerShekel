{"ast":null,"code":"import axios from 'axios';\nimport setAutToken from '../Utils/setAutToken';\nimport { REG_MID_SUC, REG_FAILD, REG_SUC, USER_LOADED, AUTH_ERROR, LOGIN_SUC, LOGIN_FAILD } from './types';\nexport const loginUser = (mail, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password\n    });\n    const res = await axios.post('/api/auth', config, body);\n    dispatch({\n      type: LOGIN_SUC,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILD\n    });\n  }\n};\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAutToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const regM = ({\n  name,\n  email,\n  password,\n  adress,\n  phonNumber\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const password2 = '21231233';\n  const body = JSON.stringify({\n    name,\n    email,\n    password2,\n    adress,\n    phonNumber\n  });\n\n  try {\n    console.log({\n      name,\n      email,\n      password,\n      adress,\n      phonNumber\n    });\n    console.log(body);\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REG_MID_SUC,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error.response);\n    dispatch({\n      type: REG_FAILD\n    });\n  }\n};\nexport const regS = (mailToken, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    password\n  });\n\n  try {\n    const res = await axios.post(`/api/users/${mailToken}`, body, config);\n    dispatch({\n      type: REG_SUC,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: REG_FAILD\n    });\n  }\n};","map":{"version":3,"sources":["C:/React/SekerShekel/client/src/action/auth.js"],"names":["axios","setAutToken","REG_MID_SUC","REG_FAILD","REG_SUC","USER_LOADED","AUTH_ERROR","LOGIN_SUC","LOGIN_FAILD","loginUser","mail","password","dispatch","config","headers","body","JSON","stringify","email","res","post","type","payload","data","error","loadUser","localStorage","token","get","regM","name","adress","phonNumber","password2","console","log","response","regS","mailToken"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport setAutToken from '../Utils/setAutToken';\r\nimport {\r\n  REG_MID_SUC,\r\n  REG_FAILD,\r\n  REG_SUC,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUC,\r\n  LOGIN_FAILD\r\n} from './types';\r\n\r\nexport const loginUser = (mail, password) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const body = JSON.stringify({\r\n      email,\r\n      password\r\n    });\r\n\r\n    const res = await axios.post('/api/auth', config, body);\r\n    dispatch({\r\n      type: LOGIN_SUC,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAILD\r\n    });\r\n  }\r\n};\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAutToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\nexport const regM = ({\r\n  name,\r\n  email,\r\n  password,\r\n  adress,\r\n  phonNumber\r\n}) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  const password2 = '21231233';\r\n  const body = JSON.stringify({ name, email, password2, adress, phonNumber });\r\n  try {\r\n    console.log({ name, email, password, adress, phonNumber });\r\n    console.log(body);\r\n\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REG_MID_SUC,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error.response);\r\n\r\n    dispatch({\r\n      type: REG_FAILD\r\n    });\r\n  }\r\n};\r\n\r\nexport const regS = (mailToken, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  const body = JSON.stringify({ password });\r\n  try {\r\n    const res = await axios.post(`/api/users/${mailToken}`, body, config);\r\n    dispatch({\r\n      type: REG_SUC,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REG_FAILD\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}