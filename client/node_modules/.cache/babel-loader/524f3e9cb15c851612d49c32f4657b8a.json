{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport setAutToken from '../Utils/setAutToken';\nimport { REG_MID_SUC, REG_FAILD, REG_SUC, USER_LOADED, AUTH_ERROR, LOGIN_SUC, LOGIN_FAILD, LOG_OUT, CLEAR_PROFILE } from './types';\nexport const loadUser = () => async dispatch => {\n  console.log('action: TRY LOAD USER');\n\n  if (localStorage.token) {\n    setAutToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOG_OUT\n  });\n};\nexport const loginUser = (email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password\n    });\n    console.log('CLIENT' + email + password);\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUC,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAILD\n    });\n  }\n};\nexport const regM = ({\n  name,\n  email,\n  password,\n  adress,\n  phonNumber\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const password2 = '21231233';\n  const body = JSON.stringify({\n    name,\n    email,\n    password2,\n    adress,\n    phonNumber\n  });\n\n  try {\n    console.log({\n      name,\n      email,\n      password,\n      adress,\n      phonNumber\n    });\n    console.log(body);\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REG_MID_SUC,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REG_FAILD\n    });\n  }\n};\nexport const regS = (mailToken, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    password\n  });\n\n  try {\n    const res = await axios.post(`/api/users/${mailToken}`, body, config);\n    dispatch({\n      type: REG_SUC,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n    console.log(errors);\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REG_FAILD\n    });\n  }\n};","map":{"version":3,"sources":["C:/React/SekerShekel/client/src/action/auth.js"],"names":["axios","setAlert","setAutToken","REG_MID_SUC","REG_FAILD","REG_SUC","USER_LOADED","AUTH_ERROR","LOGIN_SUC","LOGIN_FAILD","LOG_OUT","CLEAR_PROFILE","loadUser","dispatch","console","log","localStorage","token","res","get","type","payload","data","error","logout","loginUser","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","msg","regM","name","adress","phonNumber","password2","regS","mailToken"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport setAutToken from '../Utils/setAutToken';\r\nimport {\r\n  REG_MID_SUC,\r\n  REG_FAILD,\r\n  REG_SUC,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUC,\r\n  LOGIN_FAILD,\r\n  LOG_OUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  console.log('action: TRY LOAD USER');\r\n\r\n  if (localStorage.token) {\r\n    setAutToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\nexport const logout = () => async dispatch => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE\r\n  });\r\n  dispatch({\r\n    type: LOG_OUT\r\n  });\r\n};\r\n\r\nexport const loginUser = (email, password) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const body = JSON.stringify({\r\n      email,\r\n      password\r\n    });\r\n\r\n    console.log('CLIENT' + email + password);\r\n\r\n    const res = await axios.post('/api/auth', body, config);\r\n    dispatch({\r\n      type: LOGIN_SUC,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAILD\r\n    });\r\n  }\r\n};\r\n\r\nexport const regM = ({\r\n  name,\r\n  email,\r\n  password,\r\n  adress,\r\n  phonNumber\r\n}) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  const password2 = '21231233';\r\n  const body = JSON.stringify({ name, email, password2, adress, phonNumber });\r\n  try {\r\n    console.log({ name, email, password, adress, phonNumber });\r\n    console.log(body);\r\n\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REG_MID_SUC,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REG_FAILD\r\n    });\r\n  }\r\n};\r\n\r\nexport const regS = (mailToken, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  const body = JSON.stringify({ password });\r\n  try {\r\n    const res = await axios.post(`/api/users/${mailToken}`, body, config);\r\n    dispatch({\r\n      type: REG_SUC,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    console.log(errors);\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REG_FAILD\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}