{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\SekerShekel\\\\client\\\\src\\\\Components\\\\Pages\\\\Survey\\\\FillSurvey.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadSurveyToFill } from '../../../action/survey';\nimport Loading from '../../layout/Loading/Loading';\nimport { Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\nimport { element } from 'prop-types';\n\nclass FillSurvey extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      survey: []\n    };\n\n    this.componentDidMount = async () => {\n      let som = 'MySeker';\n      const title = 'MySeker';\n      console.log(title);\n      await this.props.loadSurveyToFill(title);\n      this.setState({\n        survey: [...this.props.survey]\n      });\n      console.log(this.state.survey);\n      const ww = this.props.survey.map(element => {\n        return element.isChoosenAnswer ? element.answers.map(ans => {\n          return ans.answer;\n        }) : null;\n      });\n      console.log(ww);\n    };\n  }\n\n  render() {\n    const s = this.props.survey;\n    const customForm = this.props.loading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : this.state.survey.map(element => {\n      return element.isChoosenAnswer; // return element.isChoosenAnswer ? (\n      //   <FormGroup tag='fieldset' row>\n      //     {/* <legend className='col-form-label col-sm-2'>{element.qust}</legend>\n      //     {element.answers.map(ans => {\n      //       return (\n      //         <Col sm={10}>\n      //           <FormGroup check>\n      //             <Label check>\n      //               <Input type='radio' name={ans.answer} />\n      //               {ans.answer}\n      //             </Label>\n      //           </FormGroup>\n      //         </Col>\n      //       );\n      //     })}\n      //     {/* <Input type='radio' name='radio2' /> Option one is this and\n      //           that—be sure to include why it's great */}{' '}\n      //     */}\n      //   </FormGroup>\n      // ) : (\n      //   <Loading></Loading>\n      // );\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  survey: state.survey.survey,\n  isLoading: state.survey.loading\n});\n\nexport default connect(mapStateToProps, {\n  loadSurveyToFill\n})(FillSurvey);","map":{"version":3,"sources":["C:/React/SekerShekel/client/src/Components/Pages/Survey/FillSurvey.js"],"names":["React","Component","connect","loadSurveyToFill","Loading","Form","FormGroup","Label","Input","FormText","Col","element","FillSurvey","state","survey","componentDidMount","som","title","console","log","props","setState","ww","map","isChoosenAnswer","answers","ans","answer","render","s","customForm","loading","mapStateToProps","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,GAAlD,QAA6D,YAA7D;AACA,SAASC,OAAT,QAAwB,YAAxB;;AACA,MAAMC,UAAN,SAAyBX,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCY,KADiC,GACzB;AACNC,MAAAA,MAAM,EAAE;AADF,KADyB;;AAAA,SAIjCC,iBAJiC,GAIb,YAAY;AAC9B,UAAIC,GAAG,GAAG,SAAV;AACA,YAAMC,KAAK,GAAG,SAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,YAAM,KAAKG,KAAL,CAAWjB,gBAAX,CAA4Bc,KAA5B,CAAN;AACA,WAAKI,QAAL,CAAc;AACZP,QAAAA,MAAM,EAAE,CAAC,GAAG,KAAKM,KAAL,CAAWN,MAAf;AADI,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,MAAvB;AACA,YAAMQ,EAAE,GAAG,KAAKF,KAAL,CAAWN,MAAX,CAAkBS,GAAlB,CAAsBZ,OAAO,IAAI;AAC1C,eAAOA,OAAO,CAACa,eAAR,GACHb,OAAO,CAACc,OAAR,CAAgBF,GAAhB,CAAoBG,GAAG,IAAI;AACzB,iBAAOA,GAAG,CAACC,MAAX;AACD,SAFD,CADG,GAIH,IAJJ;AAKD,OANU,CAAX;AAOAT,MAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACD,KAtBgC;AAAA;;AAwBjCM,EAAAA,MAAM,GAAG;AACP,UAAMC,CAAC,GAAG,KAAKT,KAAL,CAAWN,MAArB;AACA,UAAMgB,UAAU,GAAG,KAAKV,KAAL,CAAWW,OAAX,GACjB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB,GAGjB,KAAKlB,KAAL,CAAWC,MAAX,CAAkBS,GAAlB,CAAsBZ,OAAO,IAAI;AAC/B,aAAOA,OAAO,CAACa,eAAf,CAD+B,CAE/B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAzBD,CAHF;AA+BA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAhEgC;;AAmEnC,MAAMQ,eAAe,GAAGnB,KAAK,KAAK;AAChCC,EAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaA,MADW;AAEhCmB,EAAAA,SAAS,EAAEpB,KAAK,CAACC,MAAN,CAAaiB;AAFQ,CAAL,CAA7B;;AAKA,eAAe7B,OAAO,CAAC8B,eAAD,EAAkB;AAAE7B,EAAAA;AAAF,CAAlB,CAAP,CAA+CS,UAA/C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadSurveyToFill } from '../../../action/survey';\r\nimport Loading from '../../layout/Loading/Loading';\r\nimport { Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\r\nimport { element } from 'prop-types';\r\nclass FillSurvey extends Component {\r\n  state = {\r\n    survey: []\r\n  };\r\n  componentDidMount = async () => {\r\n    let som = 'MySeker';\r\n    const title = 'MySeker';\r\n    console.log(title);\r\n\r\n    await this.props.loadSurveyToFill(title);\r\n    this.setState({\r\n      survey: [...this.props.survey]\r\n    });\r\n    console.log(this.state.survey);\r\n    const ww = this.props.survey.map(element => {\r\n      return element.isChoosenAnswer\r\n        ? element.answers.map(ans => {\r\n            return ans.answer;\r\n          })\r\n        : null;\r\n    });\r\n    console.log(ww);\r\n  };\r\n\r\n  render() {\r\n    const s = this.props.survey;\r\n    const customForm = this.props.loading ? (\r\n      <Loading />\r\n    ) : (\r\n      this.state.survey.map(element => {\r\n        return element.isChoosenAnswer;\r\n        // return element.isChoosenAnswer ? (\r\n        //   <FormGroup tag='fieldset' row>\r\n        //     {/* <legend className='col-form-label col-sm-2'>{element.qust}</legend>\r\n\r\n        //     {element.answers.map(ans => {\r\n        //       return (\r\n        //         <Col sm={10}>\r\n        //           <FormGroup check>\r\n        //             <Label check>\r\n        //               <Input type='radio' name={ans.answer} />\r\n        //               {ans.answer}\r\n        //             </Label>\r\n        //           </FormGroup>\r\n        //         </Col>\r\n        //       );\r\n        //     })}\r\n        //     {/* <Input type='radio' name='radio2' /> Option one is this and\r\n        //           that—be sure to include why it's great */}{' '}\r\n        //     */}\r\n        //   </FormGroup>\r\n        // ) : (\r\n        //   <Loading></Loading>\r\n        // );\r\n      })\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h4></h4>\r\n\r\n        {/* <Form>{customForm}</Form> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  survey: state.survey.survey,\r\n  isLoading: state.survey.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadSurveyToFill })(FillSurvey);\r\n"]},"metadata":{},"sourceType":"module"}