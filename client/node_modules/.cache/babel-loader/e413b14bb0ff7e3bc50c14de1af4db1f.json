{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\SekerShekel\\\\client\\\\src\\\\Components\\\\Pages\\\\Survey\\\\FillSurvey.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadSurveyToFill } from '../../../action/survey';\nimport Loading from '../../layout/Loading/Loading';\nimport { Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\nimport { element } from 'prop-types';\n\nclass FillSurvey extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      let som = 'MySeker';\n      const title = 'MySeker';\n      console.log(title);\n      await this.props.loadSurveyToFill(title);\n      console.log(this.props.survey);\n    };\n  }\n\n  render() {\n    const customForm = this.props.survey.map(element => {\n      if (element.isChoosenAnswer) {\n        return React.createElement(FormGroup, {\n          tag: \"fieldset\",\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"legend\", {\n          className: \"col-form-label col-sm-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, element.qust), element.answers.map(ans => {\n          return React.createElement(Col, {\n            sm: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            check: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(Label, {\n            check: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(Input, {\n            type: \"radio\",\n            name: ans.answer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }), ans.answer)));\n        }));\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  survey: state.survey.survey,\n  isLoading: state.survey.loading\n});\n\nexport default connect(mapStateToProps, {\n  loadSurveyToFill\n})(FillSurvey);","map":{"version":3,"sources":["C:/React/SekerShekel/client/src/Components/Pages/Survey/FillSurvey.js"],"names":["React","Component","connect","loadSurveyToFill","Loading","Form","FormGroup","Label","Input","FormText","Col","element","FillSurvey","componentDidMount","som","title","console","log","props","survey","render","customForm","map","isChoosenAnswer","qust","answers","ans","answer","mapStateToProps","state","isLoading","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,GAAlD,QAA6D,YAA7D;AACA,SAASC,OAAT,QAAwB,YAAxB;;AACA,MAAMC,UAAN,SAAyBX,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjCY,iBADiC,GACb,YAAY;AAC9B,UAAIC,GAAG,GAAG,SAAV;AACA,YAAMC,KAAK,GAAG,SAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,YAAM,KAAKG,KAAL,CAAWf,gBAAX,CAA4BY,KAA5B,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,MAAvB;AACD,KARgC;AAAA;;AAUjCC,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,GAAlB,CAAsBX,OAAO,IAAI;AAClD,UAAIA,OAAO,CAACY,eAAZ,EAA6B;AAC3B,eACE,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAC,UAAf;AAA0B,UAAA,GAAG,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6CZ,OAAO,CAACa,IAArD,CADF,EAGGb,OAAO,CAACc,OAAR,CAAgBH,GAAhB,CAAoBI,GAAG,IAAI;AAC1B,iBACE,oBAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,SAAD;AAAW,YAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAEA,GAAG,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,GAAG,CAACC,MAFP,CADF,CADF,CADF;AAUD,SAXA,CAHH,CADF;AAoBD;AACF,KAvBkB,CAAnB;AAyBA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAzCgC;;AA4CnC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,MAAM,EAAEU,KAAK,CAACV,MAAN,CAAaA,MADW;AAEhCW,EAAAA,SAAS,EAAED,KAAK,CAACV,MAAN,CAAaY;AAFQ,CAAL,CAA7B;;AAKA,eAAe7B,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CAA+CS,UAA/C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadSurveyToFill } from '../../../action/survey';\r\nimport Loading from '../../layout/Loading/Loading';\r\nimport { Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\r\nimport { element } from 'prop-types';\r\nclass FillSurvey extends Component {\r\n  componentDidMount = async () => {\r\n    let som = 'MySeker';\r\n    const title = 'MySeker';\r\n    console.log(title);\r\n\r\n    await this.props.loadSurveyToFill(title);\r\n    console.log(this.props.survey);\r\n  };\r\n\r\n  render() {\r\n    const customForm = this.props.survey.map(element => {\r\n      if (element.isChoosenAnswer) {\r\n        return (\r\n          <FormGroup tag='fieldset' row>\r\n            <legend className='col-form-label col-sm-2'>{element.qust}</legend>\r\n\r\n            {element.answers.map(ans => {\r\n              return (\r\n                <Col sm={10}>\r\n                  <FormGroup check>\r\n                    <Label check>\r\n                      <Input type='radio' name={ans.answer} />\r\n                      {ans.answer}\r\n                    </Label>\r\n                  </FormGroup>\r\n                </Col>\r\n              );\r\n            })}\r\n            {/* <Input type='radio' name='radio2' /> Option one is this and\r\n                  thatâ€”be sure to include why it's great */}\r\n          </FormGroup>\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Form></Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  survey: state.survey.survey,\r\n  isLoading: state.survey.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadSurveyToFill })(FillSurvey);\r\n"]},"metadata":{},"sourceType":"module"}