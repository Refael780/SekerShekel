{"ast":null,"code":"import _objectSpread from \"C:\\\\React\\\\SekerShekel\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\React\\\\SekerShekel\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\React\\\\SekerShekel\\\\client\\\\src\\\\Components\\\\auth\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { loginUser } from '../../action/auth';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './Login.css';\nimport '../../App.css';\nimport CustomLogin from '.././RegisterCustom/CustomLogin';\nimport { Container, Row, Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nconst Login = props => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const email = formData.email,\n        password = formData.password;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const loginHandler = async e => {\n    e.preventDefault(); ///if some of the input is wrong we alert to user\n    ///TO-DO\n\n    try {\n      console.log('CLICK ON LOGIN SEND' + email + password);\n      props.loginUser({\n        email,\n        password\n      });\n    } catch (error) {\n      console.log(error); //alert\n    }\n  };\n\n  return props.isAuth && !props.loading ? React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(Container, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CustomLogin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isFullAut,\n  loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["C:/React/SekerShekel/client/src/Components/auth/Login.js"],"names":["React","useState","loginUser","connect","Redirect","CustomLogin","Container","Row","Col","Button","Form","FormGroup","Label","Input","FormText","Login","props","email","password","formData","setFormData","onChange","e","target","name","value","loginHandler","preventDefault","console","log","error","isAuth","loading","mapStateToProps","state","auth","isFullAut"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,aAAP;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,KAPF,EAQEC,KARF,EASEC,QATF,QAUO,YAVP;;AAYA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA,oBACWf,QAAQ,CAAC;AACvCgB,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CADnB;AAAA;AAAA,QACdC,QADc;AAAA,QACJC,WADI;;AAAA,QAMbH,KANa,GAMOE,QANP,CAMbF,KANa;AAAA,QAMNC,QANM,GAMOC,QANP,CAMND,QANM;;AAOrB,QAAMG,QAAQ,GAAGC,CAAC,IAChBF,WAAW,mBAAMD,QAAN;AAAgB,KAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA1C,KADb;;AAGA,QAAMC,YAAY,GAAG,MAAMJ,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACK,cAAF,GAD8B,CAE9B;AACA;;AACA,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBZ,KAAxB,GAAgCC,QAA5C;AAEAF,MAAAA,KAAK,CAACd,SAAN,CAAgB;AAAEe,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAhB;AACD,KAJD,CAIE,OAAOY,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EADc,CAEd;AACD;AACF,GAZD;;AAcA,SAAOd,KAAK,CAACe,MAAN,IAAgB,CAACf,KAAK,CAACgB,OAAvB,GACL,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF;AAsED,CA9FD;;AAgGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,MAAM,EAAEG,KAAK,CAACC,IAAN,CAAWC,SADa;AAEhCJ,EAAAA,OAAO,EAAEE,KAAK,CAACC,IAAN,CAAWH;AAFY,CAAL,CAA7B;;AAKA,eAAe7B,OAAO,CAAC8B,eAAD,EAAkB;AAAE/B,EAAAA;AAAF,CAAlB,CAAP,CAAwCa,KAAxC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { loginUser } from '../../action/auth';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './Login.css';\r\nimport '../../App.css';\r\nimport CustomLogin from '.././RegisterCustom/CustomLogin';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText\r\n} from 'reactstrap';\r\n\r\nconst Login = props => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const loginHandler = async e => {\r\n    e.preventDefault();\r\n    ///if some of the input is wrong we alert to user\r\n    ///TO-DO\r\n    try {\r\n      console.log('CLICK ON LOGIN SEND' + email + password);\r\n\r\n      props.loginUser({ email, password });\r\n    } catch (error) {\r\n      console.log(error);\r\n      //alert\r\n    }\r\n  };\r\n\r\n  return props.isAuth && !props.loading ? (\r\n    <Redirect to='/' />\r\n  ) : (\r\n    <Container fluid>\r\n      <CustomLogin></CustomLogin>\r\n      {/* <div dir='rtl' className='cont'>\r\n        <Row>\r\n          <Col md='12'>\r\n            <div className='loginBox'>\r\n              <section dir='rtl'>\r\n                <Col md='12'>\r\n                  <h1 className='  text-center'>התחברות</h1>\r\n                  <br />\r\n                  <hr />\r\n                  <p\r\n                    style={{ float: 'right' }}\r\n                    className='lead text-center'\r\n                    dir='rtl'\r\n                  >\r\n                    <i className='fas fa-user'> </i> על מנת להתחבר הזן כתובת\r\n                    מייל וסיסמא\r\n                  </p>\r\n                  <Form dir='rtl' action='dashboard.html'>\r\n                    <FormGroup>\r\n                      <br />\r\n                      <br />\r\n                      <br />\r\n                      <Label style={{ float: 'right' }} dir='rtl' dir='rtl'>\r\n                        כתובת מייל\r\n                      </Label>\r\n                      <Input\r\n                        bsSize='lg'\r\n                        type='email'\r\n                        placeholder='כתובת מייל'\r\n                        name='email'\r\n                        //onChange={e => onPasswordChange(e)}\r\n                        required\r\n                        onChange={e => onChange(e)}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label style={{ float: 'right' }}>סיסמא</Label>\r\n                      <Input\r\n                        bsSize='lg'\r\n                        type='password'\r\n                        placeholder='סיסמא'\r\n                        name='password'\r\n                        onChange={e => onChange(e)}\r\n                      />\r\n                    </FormGroup>\r\n                    <Input\r\n                      bsSize='lg'\r\n                      type='submit'\r\n                      //onClick={e => passwordHandler(e)}\r\n                      className='btn btn-primary'\r\n                      value='התחברות'\r\n                      onClick={e => loginHandler(e)}\r\n                    />\r\n                  </Form>\r\n                  <p style={{ float: 'right' }} className='my-1'>\r\n                    אין לך משתמש? <a href='/'>רישום</a>\r\n                  </p>\r\n                </Col>\r\n              </section>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isFullAut,\r\n  loading: state.auth.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n"]},"metadata":{},"sourceType":"module"}