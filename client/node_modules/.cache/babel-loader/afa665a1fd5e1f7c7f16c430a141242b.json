{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\SekerShekel\\\\client\\\\src\\\\Components\\\\Pages\\\\Survey\\\\FillSurvey.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadSurveyToFill } from '../../../action/survey';\nimport Loading from '../../layout/Loading/Loading';\nimport { Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\nimport { element } from 'prop-types';\n\nclass FillSurvey extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      let som = 'MySeker';\n      const title = 'MySeker';\n      console.log(title);\n      await this.props.loadSurveyToFill(title);\n      console.log(this.props.survey);\n      const ww = this.props.survey.map(element => {\n        return element.isChoosenAnswer ? element.answers.map(ans => {\n          return ans.answer;\n        }) : null;\n      });\n      console.log(ww);\n    };\n  }\n\n  render() {\n    const s = this.props.survey; // const customForm = this.props.loading ? (\n    //   <Loading />\n    // ) : (\n    //   this.props.survey.map(element => {\n    //     if (element.isChoosenAnswer) {\n    //       return (\n    //         <FormGroup tag='fieldset' row>\n    //           <legend className='col-form-label col-sm-2'>\n    //             {element.qust}\n    //           </legend>\n    //           {element.answers.map(ans => {\n    //             return (\n    //               <Col sm={10}>\n    //                 <FormGroup check>\n    //                   <Label check>\n    //                     <Input type='radio' name={ans.answer} />\n    //                     {ans.answer}\n    //                   </Label>\n    //                 </FormGroup>\n    //               </Col>\n    //             );\n    //           })}\n    //           {/* <Input type='radio' name='radio2' /> Option one is this and\n    //               that—be sure to include why it's great */}\n    //         </FormGroup>\n    //       );\n    //     }\n    //   })\n    // );\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  survey: state.survey.survey,\n  isLoading: state.survey.loading\n});\n\nexport default connect(mapStateToProps, {\n  loadSurveyToFill\n})(FillSurvey);","map":{"version":3,"sources":["C:/React/SekerShekel/client/src/Components/Pages/Survey/FillSurvey.js"],"names":["React","Component","connect","loadSurveyToFill","Loading","Form","FormGroup","Label","Input","FormText","Col","element","FillSurvey","componentDidMount","som","title","console","log","props","survey","ww","map","isChoosenAnswer","answers","ans","answer","render","s","mapStateToProps","state","isLoading","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,GAAlD,QAA6D,YAA7D;AACA,SAASC,OAAT,QAAwB,YAAxB;;AACA,MAAMC,UAAN,SAAyBX,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjCY,iBADiC,GACb,YAAY;AAC9B,UAAIC,GAAG,GAAG,SAAV;AACA,YAAMC,KAAK,GAAG,SAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,YAAM,KAAKG,KAAL,CAAWf,gBAAX,CAA4BY,KAA5B,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,MAAvB;AACA,YAAMC,EAAE,GAAG,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,GAAlB,CAAsBV,OAAO,IAAI;AAC1C,eAAOA,OAAO,CAACW,eAAR,GACHX,OAAO,CAACY,OAAR,CAAgBF,GAAhB,CAAoBG,GAAG,IAAI;AACzB,iBAAOA,GAAG,CAACC,MAAX;AACD,SAFD,CADG,GAIH,IAJJ;AAKD,OANU,CAAX;AAOAT,MAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACD,KAhBgC;AAAA;;AAkBjCM,EAAAA,MAAM,GAAG;AACP,UAAMC,CAAC,GAAG,KAAKT,KAAL,CAAWC,MAArB,CADO,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AA1DgC;;AA6DnC,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,MAAM,EAAEU,KAAK,CAACV,MAAN,CAAaA,MADW;AAEhCW,EAAAA,SAAS,EAAED,KAAK,CAACV,MAAN,CAAaY;AAFQ,CAAL,CAA7B;;AAKA,eAAe7B,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CAA+CS,UAA/C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadSurveyToFill } from '../../../action/survey';\r\nimport Loading from '../../layout/Loading/Loading';\r\nimport { Form, FormGroup, Label, Input, FormText, Col } from 'reactstrap';\r\nimport { element } from 'prop-types';\r\nclass FillSurvey extends Component {\r\n  componentDidMount = async () => {\r\n    let som = 'MySeker';\r\n    const title = 'MySeker';\r\n    console.log(title);\r\n\r\n    await this.props.loadSurveyToFill(title);\r\n    console.log(this.props.survey);\r\n    const ww = this.props.survey.map(element => {\r\n      return element.isChoosenAnswer\r\n        ? element.answers.map(ans => {\r\n            return ans.answer;\r\n          })\r\n        : null;\r\n    });\r\n    console.log(ww);\r\n  };\r\n\r\n  render() {\r\n    const s = this.props.survey;\r\n    // const customForm = this.props.loading ? (\r\n    //   <Loading />\r\n    // ) : (\r\n    //   this.props.survey.map(element => {\r\n    //     if (element.isChoosenAnswer) {\r\n    //       return (\r\n    //         <FormGroup tag='fieldset' row>\r\n    //           <legend className='col-form-label col-sm-2'>\r\n    //             {element.qust}\r\n    //           </legend>\r\n\r\n    //           {element.answers.map(ans => {\r\n    //             return (\r\n    //               <Col sm={10}>\r\n    //                 <FormGroup check>\r\n    //                   <Label check>\r\n    //                     <Input type='radio' name={ans.answer} />\r\n    //                     {ans.answer}\r\n    //                   </Label>\r\n    //                 </FormGroup>\r\n    //               </Col>\r\n    //             );\r\n    //           })}\r\n    //           {/* <Input type='radio' name='radio2' /> Option one is this and\r\n    //               that—be sure to include why it's great */}\r\n    //         </FormGroup>\r\n    //       );\r\n    //     }\r\n    //   })\r\n    // );\r\n\r\n    return (\r\n      <div>\r\n        <h4></h4>\r\n\r\n        {/* <Form>{customForm}</Form> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  survey: state.survey.survey,\r\n  isLoading: state.survey.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadSurveyToFill })(FillSurvey);\r\n"]},"metadata":{},"sourceType":"module"}