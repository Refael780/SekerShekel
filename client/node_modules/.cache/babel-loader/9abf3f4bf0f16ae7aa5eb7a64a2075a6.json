{"ast":null,"code":"import axios from 'axios';\nimport setAutToken from '../Utils/setAutToken';\nimport { REG_MID_SUC, REG_FAILD, REG_SUC, USER_LOADED, AUTH_ERROR, LOGIN_SUC, LOGIN_FAILD, LOG_OUT } from './types';\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOG_OUT\n  });\n};\nexport const loginUser = ({\n  email,\n  password\n}) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password\n    });\n    console.log('CLIENT' + email + password);\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUC,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILD\n    });\n  }\n};\nexport const loadUser = () => async dispatch => {\n  console.log('action: TRY LOAD USER');\n\n  if (localStorage.token) {\n    setAutToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const regM = ({\n  name,\n  email,\n  password,\n  adress,\n  phonNumber\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const password2 = '21231233';\n  const body = JSON.stringify({\n    name,\n    email,\n    password2,\n    adress,\n    phonNumber\n  });\n\n  try {\n    console.log({\n      name,\n      email,\n      password,\n      adress,\n      phonNumber\n    });\n    console.log(body);\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REG_MID_SUC,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error.response);\n    dispatch({\n      type: REG_FAILD\n    });\n  }\n};\nexport const regS = (mailToken, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    password\n  });\n\n  try {\n    const res = await axios.post(`/api/users/${mailToken}`, body, config);\n    dispatch({\n      type: REG_SUC,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: REG_FAILD\n    });\n  }\n};","map":{"version":3,"sources":["C:/React/SekerShekel/client/src/action/auth.js"],"names":["axios","setAutToken","REG_MID_SUC","REG_FAILD","REG_SUC","USER_LOADED","AUTH_ERROR","LOGIN_SUC","LOGIN_FAILD","LOG_OUT","logout","dispatch","type","loginUser","email","password","config","headers","body","JSON","stringify","console","log","res","post","payload","data","loadUser","error","localStorage","token","get","regM","name","adress","phonNumber","password2","response","regS","mailToken"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport setAutToken from '../Utils/setAutToken';\r\nimport {\r\n  REG_MID_SUC,\r\n  REG_FAILD,\r\n  REG_SUC,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUC,\r\n  LOGIN_FAILD,\r\n  LOG_OUT\r\n} from './types';\r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch({\r\n    type: LOG_OUT\r\n  });\r\n};\r\n\r\nexport const loginUser = ({ email, password }) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const body = JSON.stringify({\r\n      email,\r\n      password\r\n    });\r\n\r\n    console.log('CLIENT' + email + password);\r\n\r\n    const res = await axios.post('/api/auth', body, config);\r\n    dispatch({\r\n      type: LOGIN_SUC,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAILD\r\n    });\r\n  }\r\n};\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  console.log('action: TRY LOAD USER');\r\n\r\n  if (localStorage.token) {\r\n    setAutToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\nexport const regM = ({\r\n  name,\r\n  email,\r\n  password,\r\n  adress,\r\n  phonNumber\r\n}) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  const password2 = '21231233';\r\n  const body = JSON.stringify({ name, email, password2, adress, phonNumber });\r\n  try {\r\n    console.log({ name, email, password, adress, phonNumber });\r\n    console.log(body);\r\n\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REG_MID_SUC,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error.response);\r\n\r\n    dispatch({\r\n      type: REG_FAILD\r\n    });\r\n  }\r\n};\r\n\r\nexport const regS = (mailToken, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  const body = JSON.stringify({ password });\r\n  try {\r\n    const res = await axios.post(`/api/users/${mailToken}`, body, config);\r\n    dispatch({\r\n      type: REG_SUC,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REG_FAILD\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}